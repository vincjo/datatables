<script>
    import ClientLink from './ClientLink.svelte'
    import SkeletonLink from '$site/components/SkeletonLink.svelte'
    import PreviewLink from '$site/components/PreviewLink.svelte'
    import { getPath } from 'gros/page'
</script>

## Installation

<aside>

````bash
npm i -D @vincjo/datatables
````
</aside>

## Server-side pagination

This part of the lib provides 2 additional functions

> **onChange**: (state: State) => Promise`<Row[]>` <br>
> **invalidate**: () => void

⚠️ In this case `DataHandler` and showcase components are located in <span class="import">@vincjo/datatables**/remote**</span>

<a href="{getPath('/remote/basic-usage')}">&rarr; basic usage</a>


## Skeleton components
<SkeletonLink remote={true}/>


## 2.0 preview documentation (Svelte 5)
<PreviewLink remote="true"/> 

## Sample code
<aside class="bis">

````svelte
<script lang="ts">
    import { DataHandler, type State, 
             Datatable, Th, ThFilter } from '@vincjo/datatables/remote'
    import { myLoadFunction } from './my-api-helper'

    const handler = new DataHandler([], { rowsPerPage: 10 })
    const rows = handler.getRows()

    handler.onChange( (state: State) => myLoadFunction(state) )

    handler.invalidate()
</script>

<Datatable {handler}>
    <table>
        <thead>
            <tr>
                <Th {handler} orderBy="first_name">First Name</Th>
                <Th {handler} orderBy="last_name">Last Name</Th>
                <Th {handler} orderBy="email">Email</Th>
            </tr>
            <tr>
                <ThFilter {handler} filterBy="first_name"/>
                <ThFilter {handler} filterBy="last_name" />
                <ThFilter {handler} filterBy="email"/>
            </tr>
        </thead>
        <tbody>
            {#each $rows as row}
                <tr>
                    <td>{row.first_name}</td>
                    <td>{row.last_name}</td>
                    <td>{row.email}</td>
                </tr>
            {/each}
        </tbody>
    </table>
</Datatable>
````
</aside>


<br>

## Back to main site

<ClientLink/>

<br><br><br><br>
<br><br><br><br>
<br><br><br><br>

<style>
    h1 {
        color: var(--secondary);
        font-size: 28px;
        font-weight:400;
        letter-spacing: 2px;
        margin: 16px 0 0 0;
    }
    aside{max-width:400px;}
    aside.bis{max-width:680px;}
    h2{font-size:24px;color:var(--primary);font-weight:400;margin:24px 0 8px 0;}
    h3{font-size:24px;color:var(--secondary);font-weight:400;margin:16px 0 8px 0;}
    p, li {
        color: #676778;
        font-size: 15px;
        font-family: Roboto, -apple-system, BlinkMacSystemFont, Segoe UI, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
        max-width: 680px;
        line-height: 20px;
    }
    a {
        color: var(--primary-lighten);
    }
    li {
        margin: 8px 0;
    }
    blockquote {
        position:relative;
        overflow: auto;
        white-space: nowrap;
        display:inline-block;
        margin:0;
        /* width: 100%; */
        background:#fafafa;
        border-radius:8px;
        padding:2px 8px;
        margin: 2px 0;
        border: 1px solid #eee;
    }
    blockquote p{
        padding:0;
        margin:0;
        color:#ad1457;
        font-family:JetBrains;
    }
    blockquote strong{
        color:#00695c;
        font-family:JetBrains;
    }
    blockquote em{
        color:#ef6c00;
        font-style:normal;
        font-family:Helvetica;
    }
    span.import {
        color: #212121;
        font-family: JetBrains;
    }
    span.import strong {
        background: #fbc02d;
    }
    a {
        font-size: 16px;
        color: var(--secondary-darken);
        font-weight: bold;
    }
</style>
